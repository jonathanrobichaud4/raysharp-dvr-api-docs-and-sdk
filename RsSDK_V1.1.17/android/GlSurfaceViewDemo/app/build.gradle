apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.glsurfaceviewdemo"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions -std=c++11"
                abiFilters  'armeabi-v7a'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/Android/CMakeLists.txt"
        }
    }
    compileOptions {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.google.code.gson:gson:2.8.2'
}

// Workaround library native code dependency issue in gradle 3.0.0
// refer to https://issuetracker.google.com/issues/69616088
// Note that the followings are only needed to generate lib package
// into $project/distribution directory, does NOT affect application module;
// Only enable these when want to build libs (together with note
// inside settings.gradle)

//tasks.whenTaskAdded { task ->
//    if (task.name == 'externalNativeBuildRelease') {
//        task.dependsOn ":SDKAdapter:externalNativeBuildRelease"
//    } else if (task.name == 'externalNativeBuildDebug') {
//        task.dependsOn ":SDKAdapter:externalNativeBuildDebug"
//    }
//}
